<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.weng.ssm.blog.mapper.ArticleMapper">
    <resultMap id="BaseResultMap" type="article">
        <id column="article_id" property="articleId" jdbcType="INTEGER"/>
        <result column="article_user_id" property="articleUserId" jdbcType="INTEGER"/>
        <result column="article_title" property="articleTitle" jdbcType="VARCHAR"/>
        <result column="article_content" property="articleContent" jdbcType="LONGVARCHAR"/>
        <result column="article_summary" property="articleSummary" jdbcType="VARCHAR"/>
        <result column="article_view_count" property="articleViewCount" jdbcType="INTEGER"/>
        <result column="article_comment_count" property="articleCommentCount" jdbcType="INTEGER"/>
        <result column="article_like_count" property="articleLikeCount" jdbcType="INTEGER"/>
        <result column="article_is_comment" property="articleIsComment" jdbcType="INTEGER"/>
        <result column="article_order" property="articleOrder" jdbcType="INTEGER"/>
        <result column="article_create_time" property="articleCreateTime" jdbcType="TIMESTAMP"/>
        <result column="article_update_time" property="articleUpdateTime" jdbcType="TIMESTAMP"/>
        <result column="article_status" property="articleStatus" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
        article_id, article_user_id, article_title, article_content,article_summary, article_view_count, article_comment_count, article_like_count, article_create_time,
    article_update_time, article_is_comment, article_status, article_order
    </sql>
    <select id="listAllNotWithContent" resultType="article" >
        select article_id, article_user_id, article_title, article_create_time
        from article
        where article_status=1
        order by  article_id desc
    </select>

    <select id="findAll" resultMap="BaseResultMap">
        SELECT
        article.*
        FROM
        article
        <where>
            <if test="status != null">
                article.article_status = #{status} AND
            </if>
            <if test="keywords != null">
                article.article_title LIKE concat(concat('%',#{keywords}),'%') AND
            </if>
            <if test="userId != null">
                article.article_user_id = #{userId} AND
            </if>
            <if test="categoryId != null">
                article.article_id IN (
                SELECT article_category_ref.article_id FROM article_category_ref
                WHERE article_category_ref.category_id = #{categoryId}
                ) AND
            </if>
            <if test="tagId != null">
                article.article_id IN (
                SELECT article_tag_ref.article_id FROM article_tag_ref
                WHERE article_tag_ref.tag_id = #{tagId}
                ) AND
            </if>
            1 = 1
        </where>
        ORDER BY `article`.`article_order` DESC, `article`.`article_id` DESC
    </select>

    <delete id="deleteById" parameterType="Integer">
        delete from article where article_id=#{id}
    </delete>

    <delete id="deleteBatch" parameterType="list">
        delete  from  article where article_id in
            <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
    </delete>

    <insert id="insert" parameterType="article" useGeneratedKeys="true" keyProperty="articleId">
        insert into article(article_user_id, article_title,
                            article_view_count, article_comment_count,
                            article_like_count, article_create_time, article_update_time,
                            article_is_comment, article_status, article_order,
                            article_content, article_summary)
        values (#{articleUserId,jdbcType=INTEGER}, #{articleTitle,jdbcType=VARCHAR},
                #{articleViewCount,jdbcType=INTEGER},
                #{articleCommentCount,jdbcType=INTEGER},
                #{articleLikeCount,jdbcType=INTEGER}, #{articleCreateTime,jdbcType=TIMESTAMP},
                #{articleUpdateTime,jdbcType=TIMESTAMP},
                #{articleIsComment,jdbcType=INTEGER}, #{articleStatus,jdbcType=INTEGER}, #{articleOrder,jdbcType=INTEGER},
                #{articleContent,jdbcType=LONGVARCHAR}, #{articleSummary,jdbcType=VARCHAR})
    </insert>

    <update id="update" parameterType="article">
        update article
        <set>
            <if test="articleUserId != null">article_user_id = #{articleUserId,jdbcType=INTEGER},</if>
            <if test="articleTitle != null">article_title = #{articleTitle,jdbcType=VARCHAR},</if>
            <if test="articleViewCount != null">article_view_count = #{articleViewCount,jdbcType=INTEGER},</if>
            <if test="articleCommentCount != null">article_comment_count = #{articleCommentCount,jdbcType=INTEGER},</if>
            <if test="articleLikeCount != null">article_like_count = #{articleLikeCount,jdbcType=INTEGER},</if>
            <if test="articleCreateTime != null">article_create_time = #{articleCreateTime,jdbcType=TIMESTAMP},</if>
            <if test="articleUpdateTime != null">article_update_time = #{articleUpdateTime,jdbcType=TIMESTAMP},</if>
            <if test="articleIsComment != null">article_is_comment = #{articleIsComment,jdbcType=INTEGER},</if>
            <if test="articleStatus != null">article_status = #{articleStatus,jdbcType=INTEGER},</if>
            <if test="articleOrder != null">article_order = #{articleOrder,jdbcType=INTEGER},</if>
            <if test="articleContent != null">article_content = #{articleContent,jdbcType=LONGVARCHAR},</if>
            <if test="articleSummary != null">article_summary = #{articleSummary,jdbcType=VARCHAR},</if>
        </set>
        where article_id = #{articleId}
    </update>

    <select id="countArticle" resultType="Integer">
        select count(*) from article where article_status=1;
    </select>

    <select id="countArticleComment" resultType="Integer">
        select sum(article_comment_count)
        from article
        where article_status=1
    </select>

    <select id="countArticleView" resultType="Integer">
        select sum(article_view_count) from article where article_status=1
    </select>

    <select id="listArticle" resultType="article">
        select <include refid="Base_Column_List"/>
        from article where article_status=1
        order by article_status asc ,article_order desc ,article_id desc
    </select>

    <select id="getArticleByStatusAndId" resultType="article">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        article
        <where>
            <if test="status != null">
                article_status = #{status} AND
            </if>
            article_id = #{id}
        </where>
    </select>

    <select id="pageArticle" resultType="article">
        select <include refid="Base_Column_List"/>
        from article <where>
                            <if test="status!=null">
                                article_status=#{status}
                            </if>
                     </where>
        order by article_status asc,article_order desc,article_id desc
        limit #{pageIndex},#{pageSize}
    </select>

    <select id="listArticleByViewCount" resultType="article">
        select <include refid="Base_Column_List"/> from article
        where article_status=1 ORDER BY article_view_count DESC,article_order DESC, article_id DESC
        limit #{limit}
    </select>

    <select id="getAfterArticle" resultType="article">
        SELECT
            <include refid="Base_Column_List"/>
        FROM article
        <where>
            article_id >#{id} and article_status=1
        </where>
        order by article_id
        limit 1
    </select>

    <select id="getPreArticle" resultType="article">
        SELECT
        <include refid="Base_Column_List"/>
        FROM article
        <where>
            article_id &lt; #{id} and article_status=1
        </where>
        order by article_id
        limit 1
    </select>

    <select id="listRandomArticle" resultType="article">
        select <include refid="Base_Column_List"/>  from article
        where article_status=1
        order by rand()
        limit #{limit}
    </select>

    <select id="listArticleByCommentCount" resultType="article">
        select <include refid="Base_Column_List"/> from article
        ORDER BY
        article_comment_count DESC,article_order DESC, article_id DESC
        limit #{limit}
    </select>

    <update id="updateCommentCount" parameterType="Integer">
        update article set article_comment_count=( select count(*) from comment
                                                    where article_id=comment_article_id)
        where article_id=#{articleId}
    </update>

    <select id="getLastUpdateArticle" resultType="article">
        select <include refid="Base_Column_List"/> from article
        WHERE
        article_status = 1 AND article_update_time=
        (
        SELECT max(article_update_time) FROM article
        )
    </select>

    <select id="countArticleByUser" parameterType="Integer" resultType="Integer">
        select count(*) from article where article_status=1 and article_user_id=#{id}
    </select>

    <select id="findArticleByCategoryId" resultType="article">
        SELECT
            article.article_id, article.article_user_id, article.article_title,
            article.article_view_count, article.article_comment_count,
            article.article_like_count, article.article_create_time, article.article_update_time,
            article.article_is_comment, article.article_status, article.article_order,
            article.article_summary
        FROM article, article_category_ref
        WHERE
            article.article_status = 1 AND
            article.article_id = article_category_ref.article_id AND
            article_category_ref.category_id = #{catgeoyrId}
        LIMIT #{limit}
    </select>

    <select id="findArticleByCategoryIds" resultType="article">
        SELECT
        article.article_id, article.article_user_id, article.article_title,
        article.article_view_count, article.article_comment_count,
        article.article_like_count, article.article_create_time, article.article_update_time,
        article.article_is_comment, article.article_status, article.article_order,
        article.article_summary
        FROM article, article_category_ref
        <where>
            article.article_status = 1 AND
            article.article_id = article_category_ref.article_id AND
            article_category_ref.category_id
            <if test="categoryIds != null">
                IN
                <foreach collection="categoryIds" open="(" close=")" separator="," item="id">
                    #{id}
                </foreach>
            </if>
        </where>
        LIMIT #{limit}
    </select>


    <select id="listArticleByLimit" resultType="article">
        SELECT
        article_id, article_user_id, article_title, article_view_count, article_comment_count, article_like_count,
        article_create_time,
        article_update_time, article_is_comment, article_status, article_order
        FROM
        article
        ORDER BY article_id DESC
        LIMIT #{value}
    </select>
</mapper>